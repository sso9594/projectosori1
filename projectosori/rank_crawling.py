# -*- coding: utf-8 -*-
"""rank_crawling.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1LEFd58J5R8tdsg5iUg0FDZIBt4Ew1Iuo

# 모듈 및 변수 정리
"""

from bs4 import BeautifulSoup
import requests
import os
import lxml

os.environ.setdefault("DJANGO_SETTINGS_MODULE", "osori.settings")
BASE_DIR = os.path.dirname(os.path.abspath(__file__))

import django
django.setup()


from outfit.models import musinsa_rank
from outfit.models import mixxo_rank
from outfit.models import spao_rank

musinsa_ranking = "https://www.musinsa.com/ranking/best"
mixxo_ranking = "https://www.mixxo.com/product/list.html?cate_no=45"
spao_ranking = "https://www.spao.com/product/best_list.html?cate_no=1552"

headers = {
    'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/102.0.5005.63 Safari/537.36'}


def get_request(url):
    response = requests.get(url, headers=headers)
    soup = BeautifulSoup(response.text, 'lxml')
    return soup


"""# musinsa"""

# 무신사 랭킹 html 스크래핑 함수 (상품명, 상품 링크)


def get_musinsa_rank():
    soup = get_request(musinsa_ranking)
    rank_html = soup.select('p.list_info > a')
    return rank_html

# 무신사 랭킹 상품명 스크래핑 함수


def get_musinsa_rank_names():
    rank_html = get_musinsa_rank()
    list_rank_names = [i.attrs['title'] for i in rank_html[:5]]
    return list_rank_names

# 무신사 랭킹 링크 스크래핑 함수


def get_musinsa_rank_links():
    rank_html = get_musinsa_rank()
    list_rank_links = [i.attrs['href'] for i in rank_html[:5]]
    
    return list_rank_links

# 무신사 랭킹 관련 정보 크롤링 함수


def get_musinsa_rank_data():

    result = []
    i = 0
    list_rank_links = get_musinsa_rank_links()
    list_rank_names = get_musinsa_rank_names()

    for link, name in zip(list_rank_links, list_rank_names):
        i += 1

        musinsa_rank_obj = {
            'musinsa_rank_link': link,
            'musinsa_rank_name': name,
            'musinsa_rank_key': i
        }
        result.append(musinsa_rank_obj)

    return result


"""# mixxo"""

# 미쏘 랭킹 html 스크래핑 함수 (상품 링크)
# 1 => 상품 링크, 2 => 상품 이름


def get_mixxo_rank(option):
    soup = get_request(mixxo_ranking)
    if option == 1:
        rank_html = soup.select('div.prdImg > a')
        return rank_html

    elif option == 2:
        rank_html = soup.select('div.prdImg > a > img')
        return rank_html

# 미쏘 랭킹 링크 스크래핑 함수


def get_mixxo_rank_links():
    rank_html = get_mixxo_rank(1)
    list_rank_links = ['https://www.mixxo.com' + i.attrs['href']
                       for i in rank_html[:5]]
    return list_rank_links

# 미쏘 랭킹 상품명 스크래핑 함수


def get_mixxo_rank_names():
    rank_html = get_mixxo_rank(2)
    list_rank_names = [i.attrs['alt'] for i in rank_html[:5]]
    return list_rank_names

# 미쏘 랭킹 관련 정보 크롤링 함수


def get_mixxo_rank_data():

    result = []
    i = 0
    list_rank_links = get_mixxo_rank_links()
    list_rank_names = get_mixxo_rank_names()

    for link, name in zip(list_rank_links, list_rank_names):
        i += 1

        mixxo_rank_obj = {
            'mixxo_rank_link': link,
            'mixxo_rank_name': name,
            'mixxo_rank_key': i
        }
        result.append(mixxo_rank_obj)

    return result


"""# spao"""

# 스파오 랭킹 html 스크래핑 함수 (상품 링크)
# 1 = 상품 링크 2 => 상품 이름


def get_spao_rank(option):
    soup = get_request(spao_ranking)

    if option == 1:
        rank_html = soup.select(
            'ul.grid3list > li > div > div.thumbnail > div.num + div + div.prdImg > a')
        return rank_html

    elif option == 2:
        rank_html = soup.select(
            'ul.grid3list > li > div > div.thumbnail > div.num + div + div.prdImg > a > img')
        return rank_html



# 스파오 랭킹 링크 스크래핑 함수


def get_spao_rank_links():
    rank_html = get_spao_rank(1)
    list_rank_links = ['https://www.spao.com' + i.attrs['href']
                       for i in rank_html[:5]]
    return list_rank_links

# 스파오 랭킹 상품명 스크래핑 함수


def get_spao_rank_names():
    rank_html = get_spao_rank(2)
    list_rank_names = [i.attrs['alt'] for i in rank_html[:5]]
    return list_rank_names

# 스파오 랭킹 관련 정보 크롤링 함수


def get_spao_rank_data():

    result = []
    i = 0
    list_rank_links = get_spao_rank_links()
    list_rank_names = get_spao_rank_names()

    for link, name in zip(list_rank_links, list_rank_names):
        i += 1

        spao_rank_obj = {
            'spao_rank_link': link,
            'spao_rank_name': name,
            'spao_rank_key': i
        }
        result.append(spao_rank_obj)

    return result


if __name__ == '__main__':
    musinsa_rank_data = get_musinsa_rank_data()
    mixxo_rank_data = get_mixxo_rank_data()
    spao_rank_data = get_spao_rank_data()

    # musinsa ranking object
    for item in musinsa_rank_data:
        musinsa_rank(musinsa_rank_link=item['musinsa_rank_link'],
                     musinsa_rank_name=item['musinsa_rank_name'], musinsa_rank_key=item['musinsa_rank_key']).save()
    # mixxo ranking object
    for item in mixxo_rank_data:
        mixxo_rank(mixxo_rank_link=item['mixxo_rank_link'],
                   mixxo_rank_name=item['mixxo_rank_name'], mixxo_rank_key=item['mixxo_rank_key']).save()
    # spao ranking object
    for item in spao_rank_data:
        spao_rank(spao_rank_link=item['spao_rank_link'],
                  spao_rank_name=item['spao_rank_name'], spao_rank_key=item['spao_rank_key']).save()
